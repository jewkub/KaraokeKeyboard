/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package jni.marisa.swig;

public class marisaJNI {
  public final static native int OK_get();
  public final static native int STATE_ERROR_get();
  public final static native int NULL_ERROR_get();
  public final static native int BOUND_ERROR_get();
  public final static native int RANGE_ERROR_get();
  public final static native int CODE_ERROR_get();
  public final static native int RESET_ERROR_get();
  public final static native int SIZE_ERROR_get();
  public final static native int MEMORY_ERROR_get();
  public final static native int IO_ERROR_get();
  public final static native int FORMAT_ERROR_get();
  public final static native int MIN_NUM_TRIES_get();
  public final static native int MAX_NUM_TRIES_get();
  public final static native int DEFAULT_NUM_TRIES_get();
  public final static native int HUGE_CACHE_get();
  public final static native int LARGE_CACHE_get();
  public final static native int NORMAL_CACHE_get();
  public final static native int SMALL_CACHE_get();
  public final static native int TINY_CACHE_get();
  public final static native int DEFAULT_CACHE_get();
  public final static native int TEXT_TAIL_get();
  public final static native int BINARY_TAIL_get();
  public final static native int DEFAULT_TAIL_get();
  public final static native int LABEL_ORDER_get();
  public final static native int WEIGHT_ORDER_get();
  public final static native int DEFAULT_ORDER_get();
  public final static native String Key_str(long jarg1, Key jarg1_);
  public final static native long Key_id(long jarg1, Key jarg1_);
  public final static native float Key_weight(long jarg1, Key jarg1_);
  public final static native void delete_Key(long jarg1);
  public final static native String Query_str(long jarg1, Query jarg1_);
  public final static native long Query_id(long jarg1, Query jarg1_);
  public final static native void delete_Query(long jarg1);
  public final static native long new_Keyset();
  public final static native void delete_Keyset(long jarg1);
  public final static native void Keyset_push_back__SWIG_0(long jarg1, Keyset jarg1_, byte[] jarg2, float jarg4);
  public final static native void Keyset_push_back__SWIG_1(long jarg1, Keyset jarg1_, byte[] jarg2);
  public final static native long Keyset_key(long jarg1, Keyset jarg1_, long jarg2);
  public final static native String Keyset_key_str(long jarg1, Keyset jarg1_, long jarg2);
  public final static native long Keyset_key_id(long jarg1, Keyset jarg1_, long jarg2);
  public final static native long Keyset_num_keys(long jarg1, Keyset jarg1_);
  public final static native boolean Keyset_empty(long jarg1, Keyset jarg1_);
  public final static native long Keyset_size(long jarg1, Keyset jarg1_);
  public final static native long Keyset_total_length(long jarg1, Keyset jarg1_);
  public final static native void Keyset_reset(long jarg1, Keyset jarg1_);
  public final static native void Keyset_clear(long jarg1, Keyset jarg1_);
  public final static native long new_Agent();
  public final static native void delete_Agent(long jarg1);
  public final static native void Agent_set_query__SWIG_0(long jarg1, Agent jarg1_, byte[] jarg2);
  public final static native void Agent_set_query__SWIG_1(long jarg1, Agent jarg1_, long jarg2);
  public final static native long Agent_key(long jarg1, Agent jarg1_);
  public final static native long Agent_query(long jarg1, Agent jarg1_);
  public final static native String Agent_key_str(long jarg1, Agent jarg1_);
  public final static native long Agent_key_id(long jarg1, Agent jarg1_);
  public final static native String Agent_query_str(long jarg1, Agent jarg1_);
  public final static native long Agent_query_id(long jarg1, Agent jarg1_);
  public final static native long new_Trie();
  public final static native void delete_Trie(long jarg1);
  public final static native void Trie_build__SWIG_0(long jarg1, Trie jarg1_, long jarg2, Keyset jarg2_, int jarg3);
  public final static native void Trie_build__SWIG_1(long jarg1, Trie jarg1_, long jarg2, Keyset jarg2_);
  public final static native void Trie_mmap(long jarg1, Trie jarg1_, String jarg2);
  public final static native void Trie_load(long jarg1, Trie jarg1_, String jarg2);
  public final static native void Trie_save(long jarg1, Trie jarg1_, String jarg2);
  public final static native boolean Trie_lookup__SWIG_0(long jarg1, Trie jarg1_, long jarg2, Agent jarg2_);
  public final static native void Trie_reverse_lookup__SWIG_0(long jarg1, Trie jarg1_, long jarg2, Agent jarg2_);
  public final static native boolean Trie_common_prefix_search(long jarg1, Trie jarg1_, long jarg2, Agent jarg2_);
  public final static native boolean Trie_predictive_search(long jarg1, Trie jarg1_, long jarg2, Agent jarg2_);
  public final static native long Trie_lookup__SWIG_1(long jarg1, Trie jarg1_, byte[] jarg2);
  public final static native String Trie_reverse_lookup__SWIG_1(long jarg1, Trie jarg1_, long jarg2);
  public final static native long Trie_num_tries(long jarg1, Trie jarg1_);
  public final static native long Trie_num_keys(long jarg1, Trie jarg1_);
  public final static native long Trie_num_nodes(long jarg1, Trie jarg1_);
  public final static native int Trie_tail_mode(long jarg1, Trie jarg1_);
  public final static native int Trie_node_order(long jarg1, Trie jarg1_);
  public final static native boolean Trie_empty(long jarg1, Trie jarg1_);
  public final static native long Trie_size(long jarg1, Trie jarg1_);
  public final static native long Trie_total_size(long jarg1, Trie jarg1_);
  public final static native long Trie_io_size(long jarg1, Trie jarg1_);
  public final static native void Trie_clear(long jarg1, Trie jarg1_);
  public final static native long INVALID_KEY_ID_get();
}
