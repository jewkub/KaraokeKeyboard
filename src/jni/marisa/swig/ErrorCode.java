/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package jni.marisa.swig;

public final class ErrorCode {
  public final static ErrorCode OK = new ErrorCode("OK", marisaJNI.OK_get());
  public final static ErrorCode STATE_ERROR = new ErrorCode("STATE_ERROR", marisaJNI.STATE_ERROR_get());
  public final static ErrorCode NULL_ERROR = new ErrorCode("NULL_ERROR", marisaJNI.NULL_ERROR_get());
  public final static ErrorCode BOUND_ERROR = new ErrorCode("BOUND_ERROR", marisaJNI.BOUND_ERROR_get());
  public final static ErrorCode RANGE_ERROR = new ErrorCode("RANGE_ERROR", marisaJNI.RANGE_ERROR_get());
  public final static ErrorCode CODE_ERROR = new ErrorCode("CODE_ERROR", marisaJNI.CODE_ERROR_get());
  public final static ErrorCode RESET_ERROR = new ErrorCode("RESET_ERROR", marisaJNI.RESET_ERROR_get());
  public final static ErrorCode SIZE_ERROR = new ErrorCode("SIZE_ERROR", marisaJNI.SIZE_ERROR_get());
  public final static ErrorCode MEMORY_ERROR = new ErrorCode("MEMORY_ERROR", marisaJNI.MEMORY_ERROR_get());
  public final static ErrorCode IO_ERROR = new ErrorCode("IO_ERROR", marisaJNI.IO_ERROR_get());
  public final static ErrorCode FORMAT_ERROR = new ErrorCode("FORMAT_ERROR", marisaJNI.FORMAT_ERROR_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static ErrorCode swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + ErrorCode.class + " with value " + swigValue);
  }

  private ErrorCode(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private ErrorCode(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private ErrorCode(String swigName, ErrorCode swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static ErrorCode[] swigValues = { OK, STATE_ERROR, NULL_ERROR, BOUND_ERROR, RANGE_ERROR, CODE_ERROR, RESET_ERROR, SIZE_ERROR, MEMORY_ERROR, IO_ERROR, FORMAT_ERROR };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

